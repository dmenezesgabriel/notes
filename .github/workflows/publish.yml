name: Build Dendron Static Site

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # or your preferred version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # match your project's node version
          cache: "pnpm"

      - name: Restore Node modules cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: |
            node_modules
            .next/*
            !.next/.next/cache
            !.next/.env.*
          key: ${{ runner.os }}-dendronv2-${{ hashFiles('**/pnpm-lock.yaml') }}-4

      - name: Contents of next
        run: "(test -d .next) && ls .next || echo 'no next file'"

      - name: Install dependencies
        run: pnpm install

      - name: Initialize or pull nextjs template
        run: |
          if [ -d .next ]; then
            echo "updating dendron next..."
            cd .next
            git reset --hard
            git pull
            pnpm install
            cd ..
          else
            echo "init dendron next"
            pnpm dendron publish init
          fi

      - name: Contents of next
        run: "(test -d .next) && ls .next || echo 'no next file'"

      - name: Restore Next cache
        uses: actions/cache@v2
        with:
          path: .next/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('.next/pnpm-lock.yaml') }}-${{ hashFiles('.next/**.[jt]s', '.next/**.[jt]sx') }}-1

      - name: Export notes
        run: pnpm dendron publish export --target github --yes

      - name: Deploy site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: pages
          publish_dir: docs/
          force_orphan: true
